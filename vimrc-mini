let &t_SI = "\e[5 q"
let &t_EI = "\e[1 q"

let mapleader = " "

nnoremap n <Down>
vnoremap n <Down>

nnoremap e <Up>
vnoremap e <Up>

nnoremap i <Right>
vnoremap i <Right>


"	BETTER UNDO
nnoremap U <C-r>

"	BETTER ESCAPE
inoremap <leader>x <ESC>

"	BETTER EXPLORER
nnoremap <leader>e <cmd>Ex<CR>
autocmd  FileType netrw nnoremap <buffer> <leader>e <cmd>bd<cr>

"	NO HIGHLIGHT COMMAND
nnoremap <leader>no <cmd>nohl<CR>


"	BETTER QUITE AND REWRITE
nnoremap <leader>qq <cmd>q<CR>
nnoremap <leader>ww <cmd>w<CR>


" TABS
nnoremap <leader>tn <cmd>tabnew<CR>
nnoremap <tab> <cmd>tabnext<CR>
nnoremap <S-tab> <cmd>tabprevious<CR>

" TEMPLATES
nnoremap <leader>tmp i #include<unistd.h><CR>int main(int argc, char **argv)<CR>{<CR>}<CR>


set sc "show cmd
set rnu
set clipboard=unnamedplus    " Use system clipboard
set mouse=a                  " Enable mouse support
set nowrap              " Don't wrap long lines
set laststatus=2        " Always show the statusline
set wildmenu            " Enhanced command-line completion
set lazyredraw          " Faster scrolling

set shiftwidth=4        " Indentation size for autoindents
set softtabstop=4       " Number of spaces for editing <Tab>
set smartindent         " Automatically inserts extra indent on new line

set ignorecase          " Case-insensitive search...
set smartcase           " ...unless uppercase letter is used
set incsearch           " Show match while typing
set hlsearch            " Highlight all matches

colorscheme torte
syntax on
